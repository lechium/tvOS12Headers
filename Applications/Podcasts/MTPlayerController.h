//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSUserActivityDelegate.h"

@class IMAVPlayer, MPCPlayerPath, MTCompositeManifest, MTPlayerManifest, MTUpNextManifest, NSMutableSet, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSString, NSURL, NSUserActivity;

@interface MTPlayerController : NSObject <NSUserActivityDelegate>
{
    _Bool _hasReportedThisEpisode;	// 8 = 0x8
    _Bool _playerManifestRestored;	// 9 = 0x9
    IMAVPlayer *_player;	// 16 = 0x10
    MPCPlayerPath *_playerPath;	// 24 = 0x18
    MTCompositeManifest *_compositeManifest;	// 32 = 0x20
    MTUpNextManifest *_upNextManifest;	// 40 = 0x28
    MTPlayerManifest *_userManifest;	// 48 = 0x30
    double _currentTimse;	// 56 = 0x38
    NSString *_previousPlayingEpisodeUuid;	// 64 = 0x40
    double _lastPlaybackSaveTime;	// 72 = 0x48
    long long _metricsPlayStartTime;	// 80 = 0x50
    double _metricsPlayStartPosition;	// 88 = 0x58
    NSUserActivity *_currentActivity;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_restorationQueue;	// 104 = 0x68
    NSObject<OS_dispatch_semaphore> *_restorationSemaphore;	// 112 = 0x70
    NSMutableSet *_recordedPlayEventsForCurrentItem;	// 120 = 0x78
    NSURL *_lastRecordedItemURL;	// 128 = 0x80
}

+ (void)setSharedInstance:(id)arg1;	// IMP=0x00000001001701bc
+ (id)sharedInstance;	// IMP=0x00000001001701b0
@property(retain, nonatomic) NSURL *lastRecordedItemURL; // @synthesize lastRecordedItemURL=_lastRecordedItemURL;
@property(retain, nonatomic) NSMutableSet *recordedPlayEventsForCurrentItem; // @synthesize recordedPlayEventsForCurrentItem=_recordedPlayEventsForCurrentItem;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *restorationSemaphore; // @synthesize restorationSemaphore=_restorationSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *restorationQueue; // @synthesize restorationQueue=_restorationQueue;
@property(nonatomic, getter=isPlayerManifestRestored) _Bool playerManifestRestored; // @synthesize playerManifestRestored=_playerManifestRestored;
@property(retain, nonatomic) NSUserActivity *currentActivity; // @synthesize currentActivity=_currentActivity;
@property(nonatomic) double metricsPlayStartPosition; // @synthesize metricsPlayStartPosition=_metricsPlayStartPosition;
@property(nonatomic) long long metricsPlayStartTime; // @synthesize metricsPlayStartTime=_metricsPlayStartTime;
@property(nonatomic) double lastPlaybackSaveTime; // @synthesize lastPlaybackSaveTime=_lastPlaybackSaveTime;
@property(nonatomic) _Bool hasReportedThisEpisode; // @synthesize hasReportedThisEpisode=_hasReportedThisEpisode;
@property(retain, nonatomic) NSString *previousPlayingEpisodeUuid; // @synthesize previousPlayingEpisodeUuid=_previousPlayingEpisodeUuid;
@property(nonatomic) double currentTimse; // @synthesize currentTimse=_currentTimse;
@property(retain, nonatomic) MTPlayerManifest *userManifest; // @synthesize userManifest=_userManifest;
@property(retain, nonatomic) MTUpNextManifest *upNextManifest; // @synthesize upNextManifest=_upNextManifest;
@property(retain, nonatomic) MTCompositeManifest *compositeManifest; // @synthesize compositeManifest=_compositeManifest;
@property(retain, nonatomic) MPCPlayerPath *playerPath; // @synthesize playerPath=_playerPath;
@property(retain, nonatomic) IMAVPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;	// IMP=0x000000010017815c
- (void)updateUPPEpisodeUuid:(id)arg1 bookmarkTime:(double)arg2;	// IMP=0x0000000100177e4c
- (void)userActivity:(id)arg1 didReceiveInputStream:(id)arg2 outputStream:(id)arg3;	// IMP=0x0000000100177dd0
- (void)userActivityWillSave:(id)arg1;	// IMP=0x0000000100177dcc
- (void)userActivityWasContinued:(id)arg1;	// IMP=0x0000000100177dc8
- (void)recordMetricsEventForErrorLog:(id)arg1 withEpisode:(id)arg2;	// IMP=0x0000000100177a38
- (void)recordMetricsEventForAccessLog:(id)arg1 playerItem:(id)arg2 episode:(id)arg3;	// IMP=0x000000010017785c
- (void)recordMetricsForCurrentItem;	// IMP=0x00000001001772f4
- (void)recordMTPlayerMetricsForCurrentItem;	// IMP=0x0000000100176e58
- (void)_sendMediaRemoteCommand:(unsigned int)arg1 toPlayer:(void *)arg2;	// IMP=0x0000000100176d3c
- (void)_performMediaRemoteCommand:(unsigned int)arg1;	// IMP=0x0000000100176b70
- (void *)_localPlayerPath;	// IMP=0x0000000100176af0
- (id)_activityRestorationPath;	// IMP=0x0000000100176a8c
- (id)_loadActivityForRestoration;	// IMP=0x00000001001769e8
- (void)_saveActivityForRestoration;	// IMP=0x00000001001767f0
- (void)_currentActivityResignCurrent;	// IMP=0x0000000100176740
- (void)_currentActivityBecomeCurrent;	// IMP=0x0000000100176660
- (void)_updateCurrentActivityForPlayState;	// IMP=0x00000001001765a8
- (void)restoreFromUserActivity:(id)arg1 startPlayback:(_Bool)arg2 reason:(unsigned long long)arg3 interactive:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000001001760bc
- (void)_restoreManifestIfNeededWithCompletion:(CDUnknownBlockType)arg1 useEmptyManifest:(_Bool)arg2;	// IMP=0x0000000100175f1c
- (void)_restoreDefaultManifestIfNeededWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100175f0c
- (void)_restoreEmptyManifestIfNeededWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100175efc
- (void)_restorePlayerManifestWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001759b0
- (void)restorePlayerManifestWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100175888
- (id)_alertControllerForClearingOrKeepingUpNextWithRequest:(id)arg1;	// IMP=0x0000000100175244
- (void)_showGenericPromptToClearUpNextWithRequest:(id)arg1;	// IMP=0x0000000100174fd4
- (_Bool)_promptToClearUpNextIfNeededForRequest:(id)arg1;	// IMP=0x0000000100174b80
- (_Bool)_shouldOpenExternalItemForEpisode:(id)arg1;	// IMP=0x00000001001749e4
- (_Bool)_openExternalItemIfNeededForManifest:(id)arg1;	// IMP=0x000000010017496c
- (long long)_validatePlaybackRequest:(id)arg1;	// IMP=0x0000000100174430
- (id)_currentEpisodeForManifest:(id)arg1;	// IMP=0x0000000100174158
- (void)_setLocalPlaybackQueue:(id)arg1;	// IMP=0x0000000100173c64
- (void)_setPlaybackQueue:(id)arg1;	// IMP=0x0000000100173a68
- (void)playManifest:(id)arg1 reason:(unsigned long long)arg2;	// IMP=0x00000001001739d4
- (void)playManifest:(id)arg1 reason:(unsigned long long)arg2 interactive:(_Bool)arg3 presentationType:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000001001738f4
- (void)setManifest:(id)arg1 startPlayback:(_Bool)arg2 forceLocal:(_Bool)arg3 reason:(unsigned long long)arg4 interactive:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000100173818
- (void)playManifest:(id)arg1 reason:(unsigned long long)arg2 interactive:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001737a8
- (void)setManifest:(id)arg1 startPlayback:(_Bool)arg2 reason:(unsigned long long)arg3 interactive:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000100173734
- (void)setManifest:(id)arg1 reason:(unsigned long long)arg2 interactive:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001736c4
- (void)setPlaybackQueue:(id)arg1;	// IMP=0x00000001001734a0
- (void)setManifest:(id)arg1 startPlayback:(_Bool)arg2 destination:(unsigned long long)arg3 context:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000010017338c
- (void)setManifestAsDryRun:(id)arg1 reason:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010017326c
- (void)setManifest:(id)arg1 startPlayback:(_Bool)arg2 forceLocal:(_Bool)arg3 context:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000100173158
- (void)setManifest:(id)arg1 startPlayback:(_Bool)arg2 context:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001730d8
- (void)setManifest:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100173068
- (void)playManifest:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100172ff8
- (void)dismissNowPlayingAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100172ff4
- (void)dismissNowPlayingAnimated:(_Bool)arg1;	// IMP=0x0000000100172fe4
- (void)presentNowPlayingAnimated:(_Bool)arg1;	// IMP=0x0000000100172f4c
- (_Bool)isPlayingEpisodeUuid:(id)arg1;	// IMP=0x0000000100172ecc
- (id)playingEpisodeUuid;	// IMP=0x0000000100172e78
- (id)currentItem;	// IMP=0x0000000100172e24
- (_Bool)isPlayerTargetLocal;	// IMP=0x0000000100172da0
- (void)setPlayerRoute:(id)arg1;	// IMP=0x0000000100172d9c
- (void)resolveActivePlayerPathWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100172b7c
- (_Bool)isSeekingOrScrubbing;	// IMP=0x0000000100172b30
- (void)setCurrentTime:(double)arg1;	// IMP=0x0000000100172ae0
- (double)currentTime;	// IMP=0x0000000100172a8c
- (_Bool)isTargetPlaying;	// IMP=0x0000000100172a80
- (_Bool)isPlayingLocally;	// IMP=0x0000000100172a34
- (void)pausePlayerTarget;	// IMP=0x00000001001729e0
- (void)pauseLocalPlayer;	// IMP=0x00000001001729a0
- (void)playItemAtIndex:(unsigned long long)arg1;	// IMP=0x0000000100172958
- (_Bool)playWithContext:(id)arg1;	// IMP=0x0000000100172610
- (_Bool)playWithReason:(unsigned long long)arg1;	// IMP=0x00000001001725a0
- (void)openExternalEpisode:(id)arg1;	// IMP=0x0000000100172448
- (_Bool)shouldPresentNowPlayingForItem:(id)arg1 presentationType:(unsigned long long)arg2;	// IMP=0x0000000100172418
- (void)playbackStateDidChange;	// IMP=0x0000000100171f2c
- (void)playerPeriodicUpdate;	// IMP=0x00000001001719a0
- (void)playerHeadWillChange:(id)arg1;	// IMP=0x0000000100171854
- (void)currentItemDidChange;	// IMP=0x0000000100171304
- (_Bool)updateEpisode:(id)arg1 andPlayerItem:(id)arg2 withElapsedTime:(double)arg3 andDuration:(double)arg4 onMediaItemWillChange:(_Bool)arg5;	// IMP=0x0000000100171120
- (void)currentItemWillChange:(id)arg1;	// IMP=0x0000000100170cd4
- (void)playerErrorDidOccur:(id)arg1;	// IMP=0x00000001001708b4
- (void)tearDownPlayerNotifications;	// IMP=0x0000000100170864
- (void)setupPlayerNotifications;	// IMP=0x000000010017061c
- (void)dealloc;	// IMP=0x0000000100170594
- (id)init;	// IMP=0x0000000100170274
- (id)copy;	// IMP=0x000000010017024c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

